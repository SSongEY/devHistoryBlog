{"componentChunkName":"component---src-templates-post-template-jsx","path":"/works/posts/2021-01-18--001","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Eunyoung","subtitle":"EY's 개발 히스토리 블로그","copyright":"© All rights reserved.","author":{"name":"EunYoung","twitter":"#"},"disqusShortname":"","url":"https://eunyoung-autocrypt.github.io"}},"markdownRemark":{"id":"2b97ba1c-fa0f-5511-818e-70d701cece50","html":"<h3>#. 사용된 환경</h3>\n<ul>\n<li>BitBucket Cloud</li>\n<li>Jenkins</li>\n<li>Jacoco &#x26; SonarQube</li>\n<li>Docker</li>\n<li>SpringBoot Junit</li>\n</ul>\n<br>\n<h3>#. 테스트 시나리오</h3>\n<h4>#1. Pull Request 이벤트 시나리오</h4>\n<ul>\n<li>#1.1. develop branch에 Pull Request 이벤트 발생</li>\n<li>#1.2. Bitbucket 에서 Webhook 발생 ( to jenkins )</li>\n<li>#1.3. Jenkins 에서 해당 Webhook Payload를 분석하여 정의된 Pipeline 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Pipeline\n\n1. clone 타켓 branch  \n\n2. 테스트 없이 소스코드 빌드 ( 컴파일 오류 체크 )    \n    2.1. 성공 시 해당 PR에 comment 등록 (build success)  \n    2.2. 실패 시 해당 PR에 comment 등록 (build fail) 및 decline 요청 (to Bitbucket) 후 파이프라인 종료  \n\n3. 테스트 및 jacoco(수행된 테스트가 작성된 코드를 얼마나 커버 하는지에 대한 code coverage 측정) 진행   \n\n4. SonarQube 실행 (정적 코드 분석/ 버그, 코드 스멜, 보안 취약점 발견 목적 등 코드 품질에 대한 검사)  \n    4.1. Quality Gate 조건 만족 시 Teams 단체톡방 알림 전송 후 파이프라인 종료  \n    4.2. Quality Gate 조건 만족 못할 시 해당 PR에 Comment 등록 (quality gate fail) 및 decline 요청 후 파이프라인 종료</code></pre></div>\n<br>\n<h4>#2. Push to develop/master 이벤트 시나리오</h4>\n<ul>\n<li>#2.1. develop 또는 master branch에 Push 이벤트 발생</li>\n<li>#2.2. Bitbucket 에서 Webhook 발생 ( to jenkins )</li>\n<li>#1.3. Jenkins 에서 해당 Webhook Payload를 분석하여 정의된 Pipeline 실행  </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Pipeline\n\n1. clone develop 또는 master branch\n \n2. 테스트 없이 소스코드 빌드 ( 컴파일 오류 체크 )\n    2.1. 성공 시 해당 PR에 comment 등록 (build success)\n    2.2. 실패 시 해당 PR에 comment 등록 (build fail) 및 decline 요청 (to Bitbucket) 후 파이프라인 종료 \n \n3. 테스트 및 jacoco 진행 \n \n4. SonarQube 실행\n    4.1. Quality Gate 조건 만족 못할 시 해당 PR에 Comment 등록 (quality gate fail) 후 파이프라인 종료\n \n5. 빌드 완료된 jar 파일 deploy 서버에 전달 및 서비스 실행\n \n6. 완료 결과 Teams 단체톡방 알림 전송 후 파이프라인 종료</code></pre></div>","fields":{"tagSlugs":["/tags/ci-cd/"],"slug":"/works/posts/2021-01-18--001"},"frontmatter":{"title":"[작업로그] 테스트 자동화 구축 #1","tags":["ci/cd"],"date":"2021-01-18","description":"테스트 자동화 시나리오"}}},"pageContext":{"slug":"/works/posts/2021-01-18--001"}},"staticQueryHashes":[]}