{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/pages/works/index.jsx","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","className","dateTime","moment","format","key","to","React","Component","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","module","exports","arr","i","_assertThisInitialized","self","ReferenceError","len","length","arr2","Array","arrayLikeToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","WorksIndexRoute","pagingState","window","sessionStorage","getItem","routePath","location","pathname","state","JSON","parse","console","log","totalPostCnt","allMarkdownRemark","edges","totalPage","Math","ceil","currentPage","perPage","offset","setItem","stringify","componentDidUpdate","prevProps","prevState","snapshot","items","site","siteMetadata","subtitle","posts","startIndx","endIdx","forEach","post","push","id","content","style","marginTop","textAlign","variant","selectVariant","navigationVariant","pageWindowVariant","color","indicatorColor","hideNavigation","hideFirst","hideLast","hidePrevious","hideNext","disableFirst","disableLast","disablePrevious","disableNext","page","totalPages","elevation","onChange","setState","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","isArray","TypeError"],"mappings":"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","file":"component---src-pages-works-index-jsx-64e98309acbc25380ab7.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('MMMM D YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport Post from '../../components/Post';\nimport Sidebar from '../../components/Sidebar';\nimport Pagination from \"materialui-pagination-component\";\n\nclass WorksIndexRoute extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let pagingState;\n    if (typeof window !== \"undefined\") {\n      pagingState = sessionStorage.getItem(\"pagingState\");\n    }\n    const routePath = this.props.location.pathname;\n\n    if(pagingState) {\n      const state = JSON.parse(pagingState);\n      console.log(state.routePath)\n      console.log(routePath)\n      if(state.routePath === routePath) {\n        this.state = state;\n        return;\n      }\n    }\n\n    const totalPostCnt = props.data.allMarkdownRemark.edges ? props.data.allMarkdownRemark.edges.length : 0;\n    const totalPage = totalPostCnt > 0 ? Math.ceil(props.data.allMarkdownRemark.edges.length/5.0) : 1;\n\n    this.state = {\n      totalPostCnt,\n      totalPage,\n      currentPage: 1,\n      perPage: 5,\n      offset: 0,\n      routePath,\n    };\n    sessionStorage.setItem(\"pagingState\", JSON.stringify(this.state));\n\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    sessionStorage.setItem(\"pagingState\", JSON.stringify(this.state));\n  }\n\n  render() {\n    const items = [];\n    const { title, subtitle } = this.props.data.site.siteMetadata;\n    const { allMarkdownRemark } = this.props.data;\n    const posts = allMarkdownRemark ? allMarkdownRemark.edges : null;\n\n    const totalPostCnt = this.state.totalPostCnt;\n    const startIndx = this.state.offset;\n    const endIdx = startIndx + this.state.perPage;\n\n    if(posts) {\n      const displayPosts = posts.slice(startIndx, endIdx > totalPostCnt ? totalPostCnt : endIdx);\n      displayPosts.forEach(post => {\n        items.push(<Post data={post} key={post.node.fields.slug} />)\n      })\n    }\n\n    return (\n      <Layout>\n        <div id={\"category-works\"}>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n          </Helmet>\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div style={{marginTop: \"15px\", textAlign: \"end\"}}>\n              <Pagination\n                variant=\"text\" // Valid options are [\"text\", \"outlined\"].\n                selectVariant=\"tab\" // Valid options are [\"button\", \"tab\", \"select\"].\n                navigationVariant=\"icon\" // Valid options are [\"icon\", \"text\"].\n                pageWindowVariant=\"ellipsis\" // Valid options are [\"standard\", \"ellipsis\"].\n                color=\"primary\" // Passed down to Material-UI components.\n                indicatorColor=\"primary\" // Passed down to Material-UI Tabs.\n                hideNavigation={false} // Hides the first, last, previous, & next page navigation buttons.\n                hideFirst={false} // Hides the first page navigation button.\n                hideLast={false} // Hides the last page navigation button.\n                hidePrevious={false} // Hides the previous page navigation button.\n                hideNext={false} // Hides the next page navigation button.\n                disableFirst={false} // Disables the first page navigation button.\n                disableLast={false} // Disables the last page navigation button.\n                disablePrevious={false} // Disables the previous page navigation button.\n                disableNext={false} // Disables the next page navigation button.\n                page={this.state.currentPage} // The current page.\n                totalPages={this.state.totalPage} // The total number of pages.\n                elevation={0} // Passed down to Material-UI Paper component.\n                onChange={(currentPage) => {\n                  if(!currentPage) currentPage = 1;\n                  this.setState({currentPage, offset: (currentPage-1)*5})}\n                } // Callback when the page changes.\n              />\n            </div>\n            <div className=\"content__inner\">{items}</div>\n          </div>\n\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default WorksIndexRoute\n\nexport const pageQuery = graphql`\n  query WorksIndexRoute {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, category: { eq: \"works\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;"],"sourceRoot":""}