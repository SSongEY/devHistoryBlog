{"componentChunkName":"component---src-templates-post-template-jsx","path":"/history/posts/2020-10-12--001","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Eunyoung","subtitle":"작업 기록 블로그","copyright":"© All rights reserved.","author":{"name":"EunYoung","twitter":"#"},"disqusShortname":"","url":"https://ssongey.github.io"}},"markdownRemark":{"id":"4129268b-95ac-5747-8711-2ee89e57f299","html":"<ul>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--01\">아이템69) 예외는 진짜 예외 상황에만 사용하라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--02\">아이템70) 복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--03\">아이템71) 필요 없는 검사 예외 사용은 피하라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--04\">아이템72) 표준 예외를 사용하라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--05\">아이템73) 추상화 수준에 맞는 예외를 던져라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--06\">아이템74) 메서드가 던지는 모든 예외를 문서화하라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--07\">아이템75) 예외의 상세 메시지에 실패 관련 정보를 담으라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--08\">아이템76) 가능한 한 실패 원자적으로 만들라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--09\">아이템77) 예외를 무시하지 말라</a></li>\n<li><a href=\"/devHistoryBlog/history/posts/2020-10-12--001--10\">나의 결론</a></li>\n</ul>\n<p><a href=\"https://jeong-pro.tistory.com/195\">https://jeong-pro.tistory.com/195</a>\n<a href=\"https://cheese10yun.github.io/spring-guide-exception/\">https://cheese10yun.github.io/spring-guide-exception/</a>\n<a href=\"https://wbluke.tistory.com/15\">https://wbluke.tistory.com/15</a></p>","fields":{"tagSlugs":["/tags/책리뷰/","/tags/이펙티브자바/"],"slug":"/history/posts/2020-10-12--001"},"frontmatter":{"title":"[책리뷰/Effective Java] 예외","tags":["책리뷰","이펙티브자바"],"date":"2020-10-12","description":""}}},"pageContext":{"slug":"/history/posts/2020-10-12--001"}},"staticQueryHashes":[]}