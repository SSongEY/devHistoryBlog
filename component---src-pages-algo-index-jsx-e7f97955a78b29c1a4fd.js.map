{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/pages/_algo/index.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","type","description","fields","slug","categorySlug","className","dateTime","moment","format","key","to","React","Component","AlgoIndexRoute","items","site","siteMetadata","subtitle","allMarkdownRemark","posts","edges","forEach","post","push","name","content"],"mappings":"4LAKMA,G,4GACJC,OAAA,WAAU,IAAD,EAOHC,KAAKC,MAAMC,KAAKC,KAAKC,YALvBC,EAFK,EAELA,MACAC,EAHK,EAGLA,KACAC,EAJK,EAILA,SACAC,EALK,EAKLA,KACAC,EANK,EAMLA,YANK,EAQwBT,KAAKC,MAAMC,KAAKC,KAAKO,OAA5CC,EARD,EAQCA,KAAMC,EARP,EAQOA,aAEd,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,0BACEA,UAAU,kBACVC,SAAUC,IAAOT,GAAMU,OAAO,iBAE7BD,IAAOT,GAAMU,OAAO,gBAEvB,0BAAMH,UAAU,uBAChB,0BAAMA,UAAU,mBACbL,EADH,OAGA,0BAAMK,UAAU,sBAAsBI,IAAKL,GACzC,kBAAC,OAAD,CAAMM,GAAIN,EAAcC,UAAU,4BAC/BN,KAKP,wBAAIM,UAAU,eACZ,kBAAC,OAAD,CAAMA,UAAU,mBAAmBK,GAAIP,GACpCN,IAGL,uBAAGQ,UAAU,qBAAqBJ,GAClC,kBAAC,OAAD,CAAMI,UAAU,iBAAiBK,GAAIP,GAArC,U,GArCWQ,IAAMC,YA6CVtB,O,uIC3CTuB,E,kGACJtB,OAAA,WACE,IAAMuB,EAAQ,GADP,EAEqBtB,KAAKC,MAAMC,KAAKqB,KAAKC,aAAzCnB,EAFD,EAECA,MAAOoB,EAFR,EAEQA,SACPC,EAAsB1B,KAAKC,MAAMC,KAAjCwB,kBACFC,EAAQD,EAAoBA,EAAkBE,MAAQ,KAM5D,OALGD,GACDA,EAAME,SAAQ,SAAAC,GACZR,EAAMS,KAAK,kBAAC,IAAD,CAAM7B,KAAM4B,EAAMb,IAAKa,EAAK3B,KAAKO,OAAOC,WAIrD,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,+BAAQN,GACR,0BAAM2B,KAAK,cAAcC,QAASR,KAEpC,kBAAC,IAAYzB,KAAKC,OAClB,yBAAKY,UAAU,WACb,yBAAKA,UAAU,kBAAkBS,O,GApBhBH,IAAMC,WA4BpBC","file":"component---src-pages-algo-index-jsx-e7f97955a78b29c1a4fd.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      type,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('MMMM D YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-type\">\n            {type}&nbsp;/&nbsp;\n          </span>\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport Post from '../../components/Post'\nimport Sidebar from '../../components/Sidebar'\n\nclass AlgoIndexRoute extends React.Component {\n  render() {\n    const items = []\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const { allMarkdownRemark } = this.props.data;\n    const posts = allMarkdownRemark ? allMarkdownRemark.edges : null\n    if(posts)\n      posts.forEach(post => {\n        items.push(<Post data={post} key={post.node.fields.slug} />)\n      })\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n          </Helmet>\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default AlgoIndexRoute\n\nexport const pageQuery = graphql`\n  query AlgoIndexQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { category: { eq: \"algo\" } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}