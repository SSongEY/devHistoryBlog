{"version":3,"sources":["webpack:///./src/pages/algo/index.jsx","webpack:///./src/components/Post/index.jsx"],"names":["AlgoIndexRoute","render","console","log","this","props","data","items","_this$props$data$site","site","siteMetadata","title","subtitle","allMarkdownRemark","posts","edges","forEach","post","push","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_6__","key","node","fields","slug","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","name","content","_components_Sidebar__WEBPACK_IMPORTED_MODULE_7__","className","React","Component","pageQuery","Post","_this$props$data$node","frontmatter","date","category","description","_this$props$data$node2","categorySlug","react__WEBPACK_IMPORTED_MODULE_1___default","dateTime","moment","format","gatsby__WEBPACK_IMPORTED_MODULE_2__","to"],"mappings":"uOAOMA,4FACJC,kBACEC,QAAQC,IAAI,mCAAoCC,KAAKC,MAAMC,MAC3D,IAAMC,EAAQ,GAFPC,EAGqBJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAzCC,EAHDH,EAGCG,MAAOC,EAHRJ,EAGQI,SACPC,EAAsBT,KAAKC,MAAMC,KAAjCO,kBACFC,EAAQD,EAAoBA,EAAkBE,MAAQ,KAM5D,OALGD,GACDA,EAAME,QAAQ,SAAAC,GACZV,EAAMW,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMhB,KAAMW,EAAMM,IAAKN,EAAKO,KAAKC,OAAOC,UAIrDP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAQV,GACRQ,EAAAC,EAAAC,cAAA,QAAMQ,KAAK,cAAcC,QAASlB,KAEpCO,EAAAC,EAAAC,cAACU,EAAA,EAAY3B,KAAKC,OAClBc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,WACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBAAkBzB,UArBhB0B,IAAMC,WA6BpBlC,YAER,IAAMmC,EAAS,6GCjChBC,oGACJnC,kBAAS,IAAAoC,EAMHjC,KAAKC,MAAMC,KAAKkB,KAAKc,YAJvB3B,EAFK0B,EAEL1B,MACA4B,EAHKF,EAGLE,KACAC,EAJKH,EAILG,SACAC,EALKJ,EAKLI,YALKC,EAOwBtC,KAAKC,MAAMC,KAAKkB,KAAKC,OAA5CC,EAPDgB,EAOChB,KAAMiB,EAPPD,EAOOC,aAEd,OACEC,EAAAxB,EAAAC,cAAA,OAAKW,UAAU,QACbY,EAAAxB,EAAAC,cAAA,OAAKW,UAAU,cACbY,EAAAxB,EAAAC,cAAA,QACEW,UAAU,kBACVa,SAAUC,IAAOP,GAAMQ,OAAO,iBAE7BD,IAAOP,GAAMQ,OAAO,cAEvBH,EAAAxB,EAAAC,cAAA,QAAMW,UAAU,uBAChBY,EAAAxB,EAAAC,cAAA,QAAMW,UAAU,sBAAsBT,IAAKoB,GACzCC,EAAAxB,EAAAC,cAAC2B,EAAA,KAAD,CAAMC,GAAIN,EAAcX,UAAU,4BAC/BQ,KAIPI,EAAAxB,EAAAC,cAAA,MAAIW,UAAU,eACZY,EAAAxB,EAAAC,cAAC2B,EAAA,KAAD,CAAMhB,UAAU,mBAAmBiB,GAAIvB,GACpCf,IAGLiC,EAAAxB,EAAAC,cAAA,KAAGW,UAAU,qBAAqBS,GAClCG,EAAAxB,EAAAC,cAAC2B,EAAA,KAAD,CAAMhB,UAAU,iBAAiBiB,GAAIvB,GAArC,aAhCWO,IAAMC,YAwCVE","file":"component---src-pages-algo-index-jsx-a0e44836147f544a1f19.js","sourcesContent":["import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../../components/Layout'\r\nimport Post from '../../components/Post'\r\nimport Sidebar from '../../components/Sidebar'\r\n\r\nclass AlgoIndexRoute extends React.Component {\r\n  render() {\r\n    console.log('check!!!!!!!!!!!!!!!!!1 - algo: ', this.props.data);\r\n    const items = []\r\n    const { title, subtitle } = this.props.data.site.siteMetadata\r\n    const { allMarkdownRemark } = this.props.data;\r\n    const posts = allMarkdownRemark ? allMarkdownRemark.edges : null\r\n    if(posts)\r\n      posts.forEach(post => {\r\n        items.push(<Post data={post} key={post.node.fields.slug} />)\r\n      })\r\n\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <Helmet>\r\n            <title>{title}</title>\r\n            <meta name=\"description\" content={subtitle} />\r\n          </Helmet>\r\n          <Sidebar {...this.props} />\r\n          <div className=\"content\">\r\n            <div className=\"content__inner\">{items}</div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AlgoIndexRoute\r\n\r\nexport const pageQuery = graphql`\r\n  query AlgoIndexQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        subtitle\r\n        copyright\r\n        menu {\r\n          label\r\n          path\r\n        }\r\n        author {\r\n          name\r\n          email\r\n          telegram\r\n          twitter\r\n          github\r\n          rss\r\n          vk\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      filter: { frontmatter: { layout: { eq: \"post\" }, category: { eq: \"algo\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            categorySlug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            category\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport moment from 'moment'\r\nimport './style.scss'\r\n\r\nclass Post extends React.Component {\r\n  render() {\r\n    const {\r\n      title,\r\n      date,\r\n      category,\r\n      description,\r\n    } = this.props.data.node.frontmatter\r\n    const { slug, categorySlug } = this.props.data.node.fields\r\n\r\n    return (\r\n      <div className=\"post\">\r\n        <div className=\"post__meta\">\r\n          <time\r\n            className=\"post__meta-time\"\r\n            dateTime={moment(date).format('MMMM D, YYYY')}\r\n          >\r\n            {moment(date).format('MMMM YYYY')}\r\n          </time>\r\n          <span className=\"post__meta-divider\" />\r\n          <span className=\"post__meta-category\" key={categorySlug}>\r\n            <Link to={categorySlug} className=\"post__meta-category-link\">\r\n              {category}\r\n            </Link>\r\n          </span>\r\n        </div>\r\n        <h2 className=\"post__title\">\r\n          <Link className=\"post__title-link\" to={slug}>\r\n            {title}\r\n          </Link>\r\n        </h2>\r\n        <p className=\"post__description\">{description}</p>\r\n        <Link className=\"post__readmore\" to={slug}>\r\n          Read\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post\r\n"],"sourceRoot":""}